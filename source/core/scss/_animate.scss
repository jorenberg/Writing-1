// animate.css - http://daneden.me/animate
// Version - 3.5.1
// Licensed under the MIT license - http://opensource.org/licenses/MIT
// Copyright (c) 2016 - Daniel Eden.

// duration     : Specifies how many seconds or milliseconds an animation takes to complete one cycle. Default "0".
// delay        : Specifies when the animation will start. Default "0".
// function     : Describes how the animation will progress over one cycle of its duration. Default "ease".
// count        : Specifies the number of times an animation is played. Default "1".
// fill-mode    : Specifies if the effects of an animation are before the animation starts and after it ends.
// visibility   : Determines whether or not a transformed element is visible when it is not facing the screen.

$countDefault:        1 !default;
$durationDefault:     1s !default;
$delayDefault:        0s !default;
$functionDefault:     ease !default;
$fillDefault:         both;
$visibilityDefault:   hidden !default;

@mixin count($count: 1) {
  -webkit-animation-iteration-count: $count;
     -moz-animation-iteration-count: $count;
      -ms-animation-iteration-count: $count;
       -o-animation-iteration-count: $count;
          animation-iteration-count: $count;
}

@mixin duration($duration: 1s) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
      -ms-animation-duration: $duration;
       -o-animation-duration: $duration;
          animation-duration: $duration;
}

@mixin delay($delay: .2s) {
  -webkit-animation-delay: $delay;
     -moz-animation-delay: $delay;
      -ms-animation-delay: $delay;
       -o-animation-delay: $delay;
          animation-delay: $delay;
}

@mixin function($function: ease) {
  -webkit-animation-timing-function: $function;
     -moz-animation-timing-function: $function;
      -ms-animation-timing-function: $function;
       -o-animation-timing-function: $function;
          animation-timing-function: $function;
}

@mixin fill-mode($fill: both) {
  -webkit-animation-fill-mode: $fill;
     -moz-animation-fill-mode: $fill;
      -ms-animation-fill-mode: $fill;
       -o-animation-fill-mode: $fill;
          animation-fill-mode: $fill;
}

@mixin visibility($visibility: hidden) {
  -webkit-backface-visibility: $visibility;
     -moz-backface-visibility: $visibility;
      -ms-backface-visibility: $visibility;
       -o-backface-visibility: $visibility;
          backface-visibility: $visibility;
}

@mixin transform($property) {
  -webkit-transform: $property;
     -moz-transform: $property;
      -ms-transform: $property;
       -o-transform: $property;
          transform: $property;
}

@mixin transform-origin($transform-origin: center center) {
  -webkit-transform-origin: $transform-origin;
     -moz-transform-origin: $transform-origin;
      -ms-transform-origin: $transform-origin;
       -o-transform-origin: $transform-origin;
          transform-origin: $transform-origin;
}

@mixin transform-style($transform-style: flat) {
  -webkit-transform-style: $transform-style;
     -moz-transform-style: $transform-style;
       -o-transform-style: $transform-style;
          transform-style: $transform-style;
}

@mixin animation-name($animation-name) {
  -webkit-animation-name: $animation-name;
     -moz-animation-name: $animation-name;
      -ms-animation-name: $animation-name;
       -o-animation-name: $animation-name;
          animation-name: $animation-name;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  
  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

// Attention Seekers
// for Bounce:
@include keyframes(bounce) {
  0%, 20%, 50%, 80%, 100% {
    @include transform(translateY(0));
  }
  40% {
    @include transform(translateY(-30px));
  }
  60% {
    @include transform(translateY(-15px));
  }
}

@mixin bounce($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounce);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Flash:
@include keyframes(flash) {
  0%, 50%, 100% {
    opacity: 1;
  }
  25%, 75% {
    opacity: 0;
  }
}

@mixin flash($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(flash);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Jello:
// originally authored by Nick Pettit - https://github.com/nickpettit/glide
@include keyframes(jello) {
  11.1% {
    @include transform(none);
  }
  22.2% {
    @include transform(skewX(-12.5deg) skewY(-12.5deg));
  }
  33.3% {
    @include transform(skewX(6.25deg) skewY(6.25deg));
  }
  44.4% {
    @include transform(skewX(-3.125deg) skewY(-3.125deg));
  }
  55.5% {
    @include transform(skewX(1.5625deg) skewY(1.5625deg));
  }
  66.6% {
    @include transform(skewX(-0.78125deg) skewY(-0.78125deg));
  }
  77.7% {
    @include transform(skewX(0.390625deg) skewY(0.390625deg));
  }
  88.8% {
    @include transform(skewX(-0.1953125deg) skewY(-0.1953125deg));
  }
  100% {
    @include transform(none);
  }
}

@mixin jello($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(jello);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Pulse:
// originally authored by Nick Pettit - https://github.com/nickpettit/glide
@include keyframes(pulse) {
  0% {
    @include transform(scale(1));
  }
  50% {
    @include transform(scale(1.1));
  }
  100% {
    @include transform(scale(1));
  }
}

@mixin pulse($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(pulse);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Rubber Band:
@include keyframes(rubberBand) {
  0% {
    @include transform(scale3d(1, 1, 1));
  }
  30% {
    @include transform(scale3d(1.25, 0.75, 1));
  }
  40% {
    @include transform(scale3d(0.75, 1.25, 1));
  }
  50% {
    @include transform(scale3d(1.15, 0.85, 1));
  }
  65% {
    @include transform(scale3d(.95, 1.05, 1));
  }
  75% {
    @include transform(scale3d(1.05, .95, 1));
  }
  100% {
    @include transform(scale3d(1, 1, 1));
  }
}

@mixin rubberBand($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(rubberBand);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Shake:
@include keyframes(shake) {
  0%, 100% {
    @include transform(translateX(0));
  }
  10%, 30%, 50%, 70%, 90% {
    @include transform(translateX(-10px));
  }
  20%, 40%, 60%, 80% {
    @include transform(translateX(10px));
  }
}

@mixin shake($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(shake);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Swing:
@include keyframes(swing) {
  20%, 40%, 60%, 80%, 100% {
    @include transform-origin(top center);
  }
  20% {
    @include transform(rotate(15deg));
  }
  40% {
    @include transform(rotate(-10deg));
  }
  60% {
    @include transform(rotate(5deg));
  }
  80% {
    @include transform(rotate(-5deg));
  }
  100% {
    @include transform(rotate(0deg));
  }
}

@mixin swing($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include transform-origin(top center);
  @include animation-name(swing);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Tada:
@include keyframes(tada) {
  0% {
    @include transform(scale(1));
  }
  10%, 20% {
    @include transform(scale(0.9) rotate(-3deg));
  }
  30%, 50%, 70%, 90% {
    @include transform(scale(1.1) rotate(3deg));
  }
  40%, 60%, 80% {
    @include transform(scale(1.1) rotate(-3deg));
  }
  100% {
    @include transform(scale(1) rotate(0));
  }
}

@mixin tada($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(tada);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Wobble:
// originally authored by Nick Pettit - https://github.com/nickpettit/glide
@include keyframes(wobble) {
  0% {
    @include transform(translateX(0%));
  }
  15% {
    @include transform(translateX(-25%) rotate(-5deg));
  }
  30% {
    @include transform(translateX(20%) rotate(3deg));
  }
  45% {
    @include transform(translateX(-15%) rotate(-3deg));
  }
  60% {
    @include transform(translateX(10%) rotate(2deg));
  }
  75% {
    @include transform(translateX(-5%) rotate(-1deg));
  }
  100% {
    @include transform(translateX(0%));
  }
}

@mixin wobble($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(wobble);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// Bouncing Entrances
// for Bounce In:
@include keyframes(bounceIn) {
  0% {
    opacity: 0;
    @include transform(scale(.3));
  }
  50% {
    opacity: 1;
    @include transform(scale(1.05));
  }
  70% {
    @include transform(scale(.9));
  }
  100% {
    @include transform(scale(1));
  }
}

@mixin bounceIn($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceIn);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce In Down:
@include keyframes(bounceInDown) {
  0% {
    opacity: 0;
    @include transform(translateY(-2000px));
  }
  60% {
    opacity: 1;
    @include transform(translateY(30px));
  }
  80% {
    @include transform(translateY(-10px));
  }
  100% {
    @include transform(translateY(0));
  }
}

@mixin bounceInDown($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceInDown);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce In Left:
@include keyframes(bounceInLeft) {
  0% {
    opacity: 0;
    @include transform(translateX(-2000px));
  }
  60% {
    opacity: 1;
    @include transform(translateX(30px));
  }
  80% {
    @include transform(translateX(-10px));
  }
  100% {
    @include transform(translateX(0));
  }
}

@mixin bounceInLeft($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceInLeft);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce In Right:
@include keyframes(bounceInRight) {
  0% {
    opacity: 0;
    @include transform(translateX(2000px));
  }
  60% {
    opacity: 1;
    @include transform(translateX(-30px));
  }
  80% {
    @include transform(translateX(10px));
  }
  100% {
    @include transform(translateX(0));
  }
}

@mixin bounceInRight($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceInRight);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce In Up:
@include keyframes(bounceInUp) {
  0% {
    opacity: 0;
    @include transform(translateY(2000px));
  }
  60% {
    opacity: 1;
    @include transform(translateY(-30px));
  }
  80% {
    @include transform(translateY(10px));
  }
  100% {
    @include transform(translateY(0));
  }
}

@mixin bounceInUp($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceInUp);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// Bouncing Exits
// for Bounce Out:
@include keyframes(bounceOut) {
  0% {
    @include transform(scale(1));
  }
  25% {
    @include transform(scale(.95));
  }
  50% {
    opacity: 1;
    @include transform(scale(1.1));
  }
  100% {
    opacity: 0;
    @include transform(scale(.3));
  }
}

@mixin bounceOut($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceOut);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce Out Down:
@include keyframes(bounceOutDown) {
  0% {
    @include transform(translateY(0));
  }
  20% {
    opacity: 1;
    @include transform(translateY(-20px));
  }
  100% {
    opacity: 0; 
    @include transform(translateY(2000px));
  }
}

@mixin bounceOutDown($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceOutDown);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce Out Left:
@include keyframes(bounceOutLeft) {
    0% {
      @include transform(translateX(0));
    }
   20% {
     opacity: 1;
     @include transform(translateX(20px));
    }
  100% {
    opacity: 0;
    @include transform(translateX(-2000px));
  }
}

@mixin bounceOutLeft($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceOutLeft);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce Out Right:
@include keyframes(bounceOutRight) {
    0% {
      @include transform(translateX(0));
    }
   20% {
     opacity: 1;
     @include transform(translateX(-20px));
    }
  100% {
    opacity: 0;
    @include transform(translateX(2000px));
  }
}

@mixin bounceOutRight($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceOutRight);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Bounce Out Up:
@include keyframes(bounceOutUp) {
  0% {
    @include transform(translateY(0));
  }
  20% {
    opacity: 1;
    @include transform(translateY(20px));
  }
  100% {
    opacity: 0;
    @include transform(translateY(-2000px));
  }
}

@mixin bounceOutUp($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(bounceOutUp);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// Fading Entrances
// for fade In:
@include keyframes(fadeIn) {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@mixin fadeIn($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeIn);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Down:
@include keyframes(fadeInDown) {
  0% {
    opacity: 0;
    @include transform(translateY(-20px));
  }
  100% {
    opacity: 1;
    @include transform(translateY(0));
  }
}

@mixin fadeInDown($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInDown);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Down Big:
@include keyframes(fadeInDownBig) {
  0% {
    opacity: 0;
    @include transform(translateY(-2000px));
  }
  100% {
    opacity: 1;
    @include transform(translateY(0));
  }
}

@mixin fadeInDownBig($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInDownBig);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Left:
@include keyframes(fadeInLeft) {
  0% {
    opacity: 0;
    @include transform(translateX(-20px));
  }
  100% {
    opacity: 1;
    @include transform(translateX(0));
  }
}

@mixin fadeInLeft($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInLeft);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Left Big:
@include keyframes(fadeInLeftBig) {
  0% {
    opacity: 0;
    @include transform(translateX(-2000px));
  }
  100% {
    opacity: 1;
    @include transform(translateX(0));
  }
}

@mixin fadeInLeftBig($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInLeftBig);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Right:
@include keyframes(fadeInRight) {
  0% {
    opacity: 0;
    @include transform(translateX(20px));
  }
  100% {
    opacity: 1;
    @include transform(translateX(0));
  }
}

@mixin fadeInRight($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInRight);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Right Big:
@include keyframes(fadeInRightBig) {
  0% {
    opacity: 0;
    @include transform(translateX(2000px));
  }
  100% {
    opacity: 1;
    @include transform(translateX(0));
  }
}

@mixin fadeInRightBig($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInRightBig);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Up:
@include keyframes(fadeInUp) {
  0% {
    opacity: 0;
    @include transform(translateY(20px));
  }
  100% {
    opacity: 1;
    @include transform(translateY(0));
  }
}

@mixin fadeInUp($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInUp);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}

// for Fade In Up Big:
@include keyframes(fadeInUpBig) {
  0% {
    opacity: 0;
    @include transform(translateY(2000px));
  }
  100% {
    opacity: 1;
    @include transform(translateY(0));
  }
}

@mixin fadeInUpBig($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
  @include animation-name(fadeInUpBig);
  @include count($count);
  @include duration($duration);
  @include delay($delay);
  @include function($function);
  @include fill-mode($fill);
  @include visibility($visibility);
}
