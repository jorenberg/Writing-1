//*!==========================================================================
//  Normalize.scss /4.2.0/ Settings
//  A collection of HTML element and attribute style-normalizations.
//  https://github.com/necolas/normalize.css
//  ==========================================================================


// Variables:
// You can override the default values by setting the variables in your Sass
// before importing the normalize-scss library.

// The font size set on the root html element.

$base-font-size: 16px !default;

// The base line height determines the basic unit of vertical rhythm.

$base-line-height: 24px !default;

// The length unit in which to output vertical rhythm values.
// Supported values: px, em, rem.

$base-unit: 'em' !default;

// The default font family.

$base-font-family: sans-serif !default;

// The font sizes for h1-h6.

$h1-font-size: 2    * $base-font-size !default;
$h2-font-size: 1.5  * $base-font-size !default;
$h3-font-size: 1.17 * $base-font-size !default;
$h4-font-size: 1    * $base-font-size !default;
$h5-font-size: 0.83 * $base-font-size !default;
$h6-font-size: 0.67 * $base-font-size !default;

// The amount lists and blockquotes are indented.

$indent-amount: 40px !default;

// The following variable controls whether normalize-scss will output
// font-sizes, line-heights and block-level top/bottom margins that form a basic
// vertical rhythm on the page, which differs from the original Normalize.css.
// However, changing any of the variables above will cause.

// $normalize-vertical-rhythm to be automatically set to true.

$normalize-vertical-rhythm: false !default;

$support-for: (
  chrome:  -4,
  edge:    -4,
  firefox: -4,
  ie:      9,
  opera:   -4,
  safari:  -4,
  '*':     -4,
) !default;

// Set the current version number for all browsers. As of: 2016-04-30

$support-for-current-browser-version: (
  chrome:  50, // https://en.wikipedia.org/wiki/Google_Chrome_release_history
  edge:    25, // https://en.wikipedia.org/wiki/Microsoft_Edge
  firefox: 46, // https://en.wikipedia.org/wiki/Firefox_release_history
  ie:      11, // https://en.wikipedia.org/wiki/Internet_Explorer_versions
  opera:   36, // https://en.wikipedia.org/wiki/Opera_(web_browser)
  safari:  9,  // https://en.wikipedia.org/wiki/Safari_version_history
) !default;

// support-for()
//
// Determines if the project has declared a minimum supported version number for
// the specified browser.
//
// If configured, this is a wrapper function that uses Compass'
// support-legacy-browser().
// @see http://compass-style.org/reference/compass/support/#function-support-legacy-browser
//
@function support-for($browser, $version) {
  // Ensure $version is an integer (or null).
  @if not (type-of($version) == "null" or type-of($version) == "number" and round($version) == $version) {
    @error "The $version parameter of support-for() must be an integer; #{type-of($version)} given.";
  }

  // Check against declared minimums.
  $min-version: null;
  @if map-has-key($support-for, $browser) {
    $min-version: map-get($support-for, $browser);
  }
  @else if map-has-key($support-for, '*') {
    $min-version: map-get($support-for, '*');
  }

  // Ensure $min-version is an integer (or null).
  @if type-of($min-version) != "null" and type-of($min-version) != "number" {
    @error "$support-for: (#{$browser}: #{$min-version}) must be set to an integer (or null); #{$min-version} is a #{type-of($min-version)}.";
  }
  @elseif type-of($min-version) == "number" and round($min-version) != $min-version {
    @error "$support-for: (#{$browser}: #{$min-version}) must be set to an integer (or null); #{$min-version} is not an integer.";
  }

  // Negative $min-version means "X most recent versions".
  @if type-of($min-version) == "number" and $min-version < 0 {
    @if not map-has-key($support-for-current-browser-version, $browser) {
      @error "#{$browser} not found in $support-for-current-browser-version map; it must be set to an integer.";
    }
    $min-version: map-get($support-for-current-browser-version, $browser) + $min-version + 1;
  }
  @return if(($min-version and ($version >= $min-version)), true, false);
}

// Vertical Rhythm
//
// This is the minimal amount of code needed to create vertical rhythm in our
// CSS. If you are looking for a robust solution, look at the excellent Typey
// library. @see https://github.com/jptaranto/typey

@function normalize-rhythm($value, $relative-to: $base-font-size, $unit: $base-unit) {
  @if unit($value) != px {
    @error "The normalize vertical-rhythm module only supports px inputs. The typey library is better.";
  }
  @if $unit == rem {
    @return ($value / $base-font-size) * 1rem;
  }
  @else if $unit == em {
    @return ($value / $relative-to) * 1em;
  }
  @else { // $unit == px
    @return $value;
  }
}

@mixin normalize-font-size($value, $relative-to: $base-font-size) {
  @if unit($value) != 'px' {
    @error "normalize-font-size() only supports px inputs. The typey library is better.";
  }
  // px fallback for IE 8 and earlier. Note: IE 9/10 don't understand rem
  // in font shorthand, but font-size longhand is fine.
  @if $base-unit == rem and support-for(ie, 8) {
    font-size: $value;
  }
  font-size: normalize-rhythm($value, $relative-to);
}

@mixin normalize-rhythm($property, $values, $relative-to: $base-font-size) {
  $value-list: $values;
  $sep: space;
  @if type-of($values) == 'list' {
    $sep: list-separator($values);
  }
  @else {
    $value-list: append((), $values);
  }

  $normalized-values: ();
  $px-fallback: ();

  @each $value in $value-list {
    $px-value: $value;
    @if unitless($value) and $value != 0 {
      $value: $value * normalize-rhythm($base-line-height, $relative-to);
      $px-value: $px-value * normalize-rhythm($base-line-height, $relative-to, px);
    }
    $normalized-values: append($normalized-values, $value, $sep);
    $px-fallback: append($px-fallback, $px-value, $sep);
  }
  @if $base-unit == rem and support-for(ie, 8) {
    #{$property}: $px-fallback;
  }
  #{$property}: $normalized-values;
}

@mixin normalize-margin($values, $relative-to: $base-font-size) {
  @include normalize-rhythm(margin, $values, $relative-to);
}

@mixin normalize-line-height($font-size, $min-line-padding: 2px) {
  $lines: ceil($font-size / $base-line-height);
  // If lines are cramped include some extra leading.
  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {
    $lines: $lines + 1;
  }
  @include normalize-rhythm(line-height, $lines, $font-size);
}

// Helper function for the normalize() mixin.
// normalize.css v4.2.0 | MIT License | https://github.com/necolas/normalize.css

$_normalize-include: ();
$_normalize-exclude: ();
@function _normalize-include($section) {
  // Check if $section is in the $include list.
  @if index($_normalize-include, $section) {
    @return true;
  }
  // If $include is set to (all), make sure $section is not in $exclude.
  @else if not index($_normalize-exclude, $section) and index($_normalize-include, all) {
    @return true;
  }
  @return false;
}

@mixin _normalize-monospace() {
  font-family: monospace, monospace;
  @if support-for(ie, 6) {
    _font-family: 'courier new', monospace;
  }
  font-size: 1em;
}

@mixin normalize($include: (all), $exclude: ()) {
  // If we had local functions, we could access our parameters inside the
  // function without passing them in as parameters. The hacky work-around is to
  // stuff them into global variables so can access them from a global function.
  $_normalize-include: if(type-of($include) == 'list', $include, ($include)) !global;
  $_normalize-exclude: if(type-of($exclude) == 'list', $exclude, ($exclude)) !global;
  
  // If we've customized any font variables, we'll need extra properties.
  @if $base-font-size != 16px
    or $base-line-height != 24px
    or $base-unit != 'em'
    or $h1-font-size != 2    * $base-font-size
    or $h2-font-size != 1.5  * $base-font-size
    or $h3-font-size != 1.17 * $base-font-size
    or $h4-font-size != 1    * $base-font-size
    or $h5-font-size != 0.83 * $base-font-size
    or $h6-font-size != 0.67 * $base-font-size
    or $indent-amount != 40px {
    $normalize-vertical-rhythm: true !global;
  }

  /*! normalize-scss | MIT/GPLv2 License */
  
  @if _normalize-include(root) {
    /**
     * 1. Change the default font family in all browsers (opinionated).
     * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
     */
    
    html {
      @if $normalize-vertical-rhythm or support-for(ie, 7) {
        // Correct text resizing oddly in IE 6/7 when body `font-size` is set using
        // `em` units.
        font-size: ($base-font-size / 16px) * 100%;
      }
      @if $normalize-vertical-rhythm {
        line-height: ($base-line-height / $base-font-size) * 1em;
      }
      font-family: $base-font-family; /* 1 */
      -ms-text-size-adjust: 100%; /* 2 */
      -webkit-text-size-adjust: 100%; /* 2 */
    }

    /**
     * Remove the margin in all browsers (opinionated).
     */

    body {
      margin: 0;
    }
  }

  @if _normalize-include(html5) {
    /* HTML5 display definitions
       ========================================================================== */

    /**
     * Add the correct display in IE <10.
     * Add the correct display in Edge, IE, and Firefox for `details` or `summary`.
     * Add the correct display in IE for `main`.
     */

    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    main,
    menu,
    nav,
    section,
    summary {
      display: block;
    }

    /**
     * Add the correct display in IE <10.
     */

    audio,
    canvas,
    progress,
    video {
      display: inline-block;
      @if support-for(ie, 7) {
        *display: inline;
        *zoom: 1;
      }
    }

    /**
     * Add the correct display and remove excess height in iOS 4-7.
     */

    audio:not([controls]) {
      display: none;
      height: 0;
    }

    /**
     * Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */

    progress {
      vertical-align: baseline;
    }

    /**
     * Add the correct display in IE <11, Safari <8, and Firefox <22.
     * 1. Add the correct display in IE.
     */

    template, /* 1 */
    [hidden] {
      display: none;
    }
  }

  @if _normalize-include(links) {
    /* Links
       ========================================================================== */

    /**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */

    a {
      background-color: transparent; /* 1 */
      -webkit-text-decoration-skip: objects; /* 2 */
    }

    /**
     * Remove the outline on focused links when they are also active or hovered
     * in all browsers (opinionated).
     */

    a:active,
    a:hover {
      outline-width: 0;
    }
  }

  @if _normalize-include(text) {
    /* Text-level semantics
       ========================================================================== */

    /**
     * 1. Remove the bottom border in Firefox <40.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */

    abbr[title] {
      border-bottom: none; /* 1 */
      text-decoration: underline; /* 2 */
      text-decoration: underline dotted; /* 2 */
    }

    /**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */

    b,
    strong {
      font-weight: inherit;
    }

    /**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */

    b,
    strong {
      font-weight: bolder;
    }

    /**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */

    code,
    kbd,
    samp {
      @include _normalize-monospace();
    }

    /**
     * Add the correct font style in Android <4.4.
     */

    dfn {
      font-style: italic;
    }

    /**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */

    h1 {
      @include normalize-font-size($h1-font-size);
      @if $normalize-vertical-rhythm {
        @include normalize-line-height($h1-font-size);
      }

      /* Set 1 unit of vertical rhythm on the top and bottom margins. */
      @include normalize-margin(1 0, $h1-font-size);
    }

    @if $normalize-vertical-rhythm or support-for(ie, 7) {
      h2 {
        @include normalize-font-size($h2-font-size);
        @if $normalize-vertical-rhythm {
          @include normalize-line-height($h2-font-size);
        }
        @include normalize-margin(1 0, $h2-font-size);
      }

      h3 {
        @include normalize-font-size($h3-font-size);
        @if $normalize-vertical-rhythm {
          @include normalize-line-height($h3-font-size);
        }
        @include normalize-margin(1 0, $h3-font-size);
      }

      h4 {
        @include normalize-font-size($h4-font-size);
        @if $normalize-vertical-rhythm {
          @include normalize-line-height($h4-font-size);
        }
        @include normalize-margin(1 0, $h4-font-size);
      }

      h5 {
        @include normalize-font-size($h5-font-size);
        @if $normalize-vertical-rhythm {
          @include normalize-line-height($h5-font-size);
        }
        @include normalize-margin(1 0, $h5-font-size);
      }

      h6 {
        @include normalize-font-size($h6-font-size);
        @if $normalize-vertical-rhythm {
          @include normalize-line-height($h6-font-size);
        }
        @include normalize-margin(1 0, $h6-font-size);
      }
    }

    /**
     * Add the correct background and color in IE <10.
     */

    mark {
      background-color: #ff0;
      color: #000;
    }

    /**
     * Add the correct font size in all browsers.
     */

    small {
      font-size: 80%;
    }

    /**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */

    sub,
    sup {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline;
    }

    sub {
      bottom: -0.25em;
    }

    sup {
      top: -0.5em;
    }
  }

  @if _normalize-include(embedded) {
    /* Embedded content
       ========================================================================== */

    /**
     * Remove the border on images inside links in IE <11.
     */

    img {
      border-style: none;
      @if support-for(ie, 7) {
        /* Improve image quality when scaled in IE 7. */
        -ms-interpolation-mode: bicubic;
      }
    }

    /**
     * Hide the overflow in IE.
     */

    svg:not(:root) {
      overflow: hidden;
    }
  }

  @if _normalize-include(grouping) {
    /* Grouping content
       ========================================================================== */

    @if $normalize-vertical-rhythm or support-for(ie, 7) {
      /**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */

      blockquote {
        @include normalize-margin(1 $indent-amount);
      }

      /**
       * Address margins set differently in IE 6/7.
       */

      dl,
      menu,
      ol,
      ul {
        @include normalize-margin(1 0);
      }

      @if $normalize-vertical-rhythm {
        /**
         * Turn off margins on nested lists.
         */

        ol,
        ul {
          ol,
          ul {
            margin: 0;
          }
        }
      }

      dd {
        margin: 0 0 0 $indent-amount;
      }

      /**
       * Address paddings set differently in IE 6/7.
       */

      menu,
      ol,
      ul {
        padding: 0 0 0 $indent-amount;
      }
    }

    @if support-for(ie, 7) {
      /**
       * Correct list images handled incorrectly in IE 7.
       */

      nav ul,
      nav ol {
        list-style: none;
        list-style-image: none;
      }
    }

    /**
     * Add the correct margin in IE 8.
     */

    figure {
      @include normalize-margin(1 $indent-amount);
    }

    /**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */

    hr {
      box-sizing: content-box; /* 1 */
      height: 0; /* 1 */
      overflow: visible; /* 2 */
    }

    @if $normalize-vertical-rhythm or support-for(ie, 7) {
      /**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */

      p,
      pre {
        @include normalize-margin(1 0);
      }
    }

    pre {
      @include _normalize-monospace();
    }
  }

  @if _normalize-include(forms) {
    /* Forms
       ========================================================================== */

    /**
     * Known issues:
     * - By default, Chrome on OS X and Safari on OS X allow very limited styling of
     *   select, unless a border property is set. The default font weight on
     *   optgroup elements cannot safely be changed in Chrome on OSX and Safari on
     *   OS X.
     * - It is recommended that you do not style checkbox and radio inputs as
     *   Firefox's implementation does not respect box-sizing, padding, or width.
     * - Certain font size values applied to number inputs cause the cursor style of
     *   the decrement button to change from default to text.
     * - The search input is not fully stylable by default. In Chrome and Safari on
     *   OSX/iOS you can't control font, padding, border, or background. In Chrome
     *   and Safari on Windows you can't control border properly. It will apply
     *   border-width but will only show a border color (which cannot be controlled)
     *   for the outer 1px of that border. Applying -webkit-appearance: textfield
     *   addresses these issues without removing the benefits of search inputs (e.g.
     *   showing past searches). Safari (but not Chrome) will clip the cancel button
     *   on when it has padding (and textfield appearance).
     */

    @if support-for(ie, 7) {
      /**
       * Correct margin displayed oddly in IE 6/7.
       */

      form {
        margin: 0;
      }
    }

    /**
     * 1. Change font properties to `inherit` in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     * 3. Address `font-family` inconsistency between `textarea` and other form in IE 7
     * 4. Improve appearance and consistency with IE 6/7.
     */

    button,
    input,
    optgroup,
    select,
    textarea {
      font: inherit; /* 1 */
      margin: 0; /* 2 */
      @if support-for(ie, 7) {
        *font-family: $base-font-family; /* 3 */
        *vertical-align: middle; /* 4 */
      }
    }

    /**
     * Show the overflow in IE.
     */

    button {
      overflow: visible;
    }

    /**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */

    button,
    select { /* 1 */
      text-transform: none;
    }

    /**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */

    button,
    html [type="button"], /* 1 */
    [type="reset"],
    [type="submit"] {
      -webkit-appearance: button; /* 2 */
    }

    button,
    [type="button"],
    [type="reset"],
    [type="submit"] {

      /**
       * Remove the inner border and padding in Firefox.
       */

      &::-moz-focus-inner {
        border-style: none;
        padding: 0;
      }

      /**
       * Restore the focus styles unset by the previous rule.
       */

      &:-moz-focusring {
        outline: 1px dotted ButtonText;
      }
    }

    /**
     * Show the overflow in Edge.
     */

    input {
      overflow: visible;
      @if support-for(firefox, 29) {
        // Firefox sets `line-height` using `!important` in the UA stylesheet.
        line-height: normal;
      }
    }

    /**
     * 1. Add the correct box sizing in IE <11.
     * 2. Remove the padding in IE <11.
     * 3. Remove excess padding in IE 7.
     *    Known issue: excess padding remains in IE 6.
     */

    [type="checkbox"],
    [type="radio"] {
      box-sizing: border-box; /* 1 */
      padding: 0; /* 2 */
      @if support-for(ie, 7) {
        *height: 13px; /* 3 */
        *width: 13px; /* 3 */
      }
    }

    /**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */

    [type="number"]::-webkit-inner-spin-button,
    [type="number"]::-webkit-outer-spin-button {
      height: auto;
    }

    /**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */

    [type="search"] {
      -webkit-appearance: textfield; /* 1 */
      outline-offset: -2px; /* 2 */

      /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
       */

      &::-webkit-search-cancel-button,
      &::-webkit-search-decoration {
        -webkit-appearance: none;
      }
    }

    /**
     * Correct the text style of placeholders in Chrome, Edge, and Safari.
     */

    ::-webkit-input-placeholder {
      color: inherit;
      opacity: 0.54;
    }

    /**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */

    ::-webkit-file-upload-button {
      -webkit-appearance: button; /* 1 */
      font: inherit; /* 2 */
    }

    /**
     * Change the border, margin, and padding in all browsers (opinionated).
     */

    fieldset {
      border: 1px solid #c0c0c0;
      margin: 0 2px;
      padding: 0.35em 0.625em 0.75em;
    }

    /**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     * 4. Correct alignment displayed oddly in IE 6/7.
     */

    legend {
      box-sizing: border-box; /* 1 */
      display: table; /* 1 */
      max-width: 100%; /* 1 */
      white-space: normal; /* 1 */
      color: inherit; /* 2 */
      padding: 0; /* 3 */
      @if support-for(ie, 7) {
        *margin-left: -7px; /* 4 */
      }
    }

    /**
     * Restore the font weight unset by a previous rule.
     */

    optgroup {
      font-weight: bold;
    }

    /**
     * Remove the default vertical scrollbar in IE.
     */

    textarea {
      overflow: auto;
    }
  }
}
